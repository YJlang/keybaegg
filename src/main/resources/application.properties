# ===========================================
# Keyboard Warrior Management System
# ===========================================

# ----------------------------
# Application Info
# ----------------------------
spring.application.name=apipractice

# ----------------------------
# Server Port (Cloudtype에서 자동 설정)
# ----------------------------
server.port=${PORT:8080}

# ----------------------------
# Datasource (PostgreSQL) - 환경변수 사용
# ----------------------------
# Cloudtype 배포 시: DATABASE_URL 환경변수 사용
# 로컬 개발 시: 기본값 사용
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/keybaegg_db}
spring.datasource.username=${DATABASE_USERNAME:keybaegg_db_user}
spring.datasource.password=${DATABASE_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# ----------------------------
# JPA Settings
# ----------------------------
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_FORMAT_SQL:false}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# ----------------------------
# Logging Settings
# ----------------------------
logging.level.org.hibernate.SQL=${HIBERNATE_SQL_LOG:INFO}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${HIBERNATE_BINDER_LOG:INFO}
logging.level.com.example.apipractice=${APP_LOG_LEVEL:INFO}

# ----------------------------
# File Upload Settings
# ----------------------------
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# ----------------------------
# Static Resources Settings
# ----------------------------
spring.web.resources.static-locations=classpath:/static/
spring.web.resources.add-mappings=true

# ----------------------------
# Connection Pool Settings (HikariCP)
# ----------------------------
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAX_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${HIKARI_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=${HIKARI_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.idle-timeout=${HIKARI_IDLE_TIMEOUT:600000}
spring.datasource.hikari.max-lifetime=${HIKARI_MAX_LIFETIME:1800000}

# ----------------------------
# Environment Info
# ----------------------------
# 현재 활성 프로필: ${SPRING_PROFILES_ACTIVE:default}
# 데이터베이스 URL: ${DATABASE_URL:로컬 PostgreSQL}
